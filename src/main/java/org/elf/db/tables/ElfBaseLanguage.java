/*
 * This file is generated by jOOQ.
 */
package org.elf.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.elf.db.Elf;
import org.elf.db.Indexes;
import org.elf.db.Keys;
import org.elf.db.tables.records.ElfBaseLanguageRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用来做国际化翻译后台的提示信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ElfBaseLanguage extends TableImpl<ElfBaseLanguageRecord> {

    private static final long serialVersionUID = -1736725610;

    /**
     * The reference instance of <code>elf.elf_base_language</code>
     */
    public static final ElfBaseLanguage ELF_BASE_LANGUAGE = new ElfBaseLanguage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ElfBaseLanguageRecord> getRecordType() {
        return ElfBaseLanguageRecord.class;
    }

    /**
     * The column <code>elf.elf_base_language.id</code>.
     */
    public final TableField<ElfBaseLanguageRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>elf.elf_base_language.country</code>. 所属国家，按照国际手机号码区号进行编码
     */
    public final TableField<ElfBaseLanguageRecord, Integer> COUNTRY = createField("country", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所属国家，按照国际手机号码区号进行编码");

    /**
     * The column <code>elf.elf_base_language.key</code>. 所属的KEY
     */
    public final TableField<ElfBaseLanguageRecord, Long> KEY = createField("key", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "所属的KEY");

    /**
     * The column <code>elf.elf_base_language.msg</code>. 详细的消息
     */
    public final TableField<ElfBaseLanguageRecord, String> MSG = createField("msg", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "详细的消息");

    /**
     * Create a <code>elf.elf_base_language</code> table reference
     */
    public ElfBaseLanguage() {
        this(DSL.name("elf_base_language"), null);
    }

    /**
     * Create an aliased <code>elf.elf_base_language</code> table reference
     */
    public ElfBaseLanguage(String alias) {
        this(DSL.name(alias), ELF_BASE_LANGUAGE);
    }

    /**
     * Create an aliased <code>elf.elf_base_language</code> table reference
     */
    public ElfBaseLanguage(Name alias) {
        this(alias, ELF_BASE_LANGUAGE);
    }

    private ElfBaseLanguage(Name alias, Table<ElfBaseLanguageRecord> aliased) {
        this(alias, aliased, null);
    }

    private ElfBaseLanguage(Name alias, Table<ElfBaseLanguageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用来做国际化翻译后台的提示信息"));
    }

    public <O extends Record> ElfBaseLanguage(Table<O> child, ForeignKey<O, ElfBaseLanguageRecord> key) {
        super(child, key, ELF_BASE_LANGUAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Elf.ELF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ELF_BASE_LANGUAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ElfBaseLanguageRecord> getPrimaryKey() {
        return Keys.KEY_ELF_BASE_LANGUAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ElfBaseLanguageRecord>> getKeys() {
        return Arrays.<UniqueKey<ElfBaseLanguageRecord>>asList(Keys.KEY_ELF_BASE_LANGUAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElfBaseLanguage as(String alias) {
        return new ElfBaseLanguage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElfBaseLanguage as(Name alias) {
        return new ElfBaseLanguage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ElfBaseLanguage rename(String name) {
        return new ElfBaseLanguage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ElfBaseLanguage rename(Name name) {
        return new ElfBaseLanguage(name, null);
    }
}
