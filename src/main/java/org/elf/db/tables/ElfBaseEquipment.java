/*
 * This file is generated by jOOQ.
 */
package org.elf.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.elf.db.Elf;
import org.elf.db.Indexes;
import org.elf.db.Keys;
import org.elf.db.tables.records.ElfBaseEquipmentRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 设备信息维护表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ElfBaseEquipment extends TableImpl<ElfBaseEquipmentRecord> {

    private static final long serialVersionUID = -671916965;

    /**
     * The reference instance of <code>elf.elf_base_equipment</code>
     */
    public static final ElfBaseEquipment ELF_BASE_EQUIPMENT = new ElfBaseEquipment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ElfBaseEquipmentRecord> getRecordType() {
        return ElfBaseEquipmentRecord.class;
    }

    /**
     * The column <code>elf.elf_base_equipment.id</code>.
     */
    public final TableField<ElfBaseEquipmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>elf.elf_base_equipment.equipment_name</code>. 设备名称
     */
    public final TableField<ElfBaseEquipmentRecord, String> EQUIPMENT_NAME = createField("equipment_name", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "设备名称");

    /**
     * The column <code>elf.elf_base_equipment.mechanism_id</code>. 机构ID
     */
    public final TableField<ElfBaseEquipmentRecord, Long> MECHANISM_ID = createField("mechanism_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "机构ID");

    /**
     * Create a <code>elf.elf_base_equipment</code> table reference
     */
    public ElfBaseEquipment() {
        this(DSL.name("elf_base_equipment"), null);
    }

    /**
     * Create an aliased <code>elf.elf_base_equipment</code> table reference
     */
    public ElfBaseEquipment(String alias) {
        this(DSL.name(alias), ELF_BASE_EQUIPMENT);
    }

    /**
     * Create an aliased <code>elf.elf_base_equipment</code> table reference
     */
    public ElfBaseEquipment(Name alias) {
        this(alias, ELF_BASE_EQUIPMENT);
    }

    private ElfBaseEquipment(Name alias, Table<ElfBaseEquipmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private ElfBaseEquipment(Name alias, Table<ElfBaseEquipmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("设备信息维护表"));
    }

    public <O extends Record> ElfBaseEquipment(Table<O> child, ForeignKey<O, ElfBaseEquipmentRecord> key) {
        super(child, key, ELF_BASE_EQUIPMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Elf.ELF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ELF_BASE_EQUIPMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ElfBaseEquipmentRecord> getPrimaryKey() {
        return Keys.KEY_ELF_BASE_EQUIPMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ElfBaseEquipmentRecord>> getKeys() {
        return Arrays.<UniqueKey<ElfBaseEquipmentRecord>>asList(Keys.KEY_ELF_BASE_EQUIPMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElfBaseEquipment as(String alias) {
        return new ElfBaseEquipment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElfBaseEquipment as(Name alias) {
        return new ElfBaseEquipment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ElfBaseEquipment rename(String name) {
        return new ElfBaseEquipment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ElfBaseEquipment rename(Name name) {
        return new ElfBaseEquipment(name, null);
    }
}
